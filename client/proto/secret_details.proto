// Copyright 2022 Harness Inc. All rights reserved.
// Use of this source code is governed by the PolyForm Free Trial 1.0.0 license
// that can be found in the licenses directory at the root of this repository, also available at
// https://polyformproject.org/wp-content/uploads/2020/05/PolyForm-Free-Trial-1.0.0.txt.

syntax = "proto3";

option go_package = "client/proto";

package proto;

message SecretDetail {
  EncryptedRecordForDelegateDecryption encrypted_data = 1;
  EncryptionConfig config = 2;
}

/*
  Data model of encrypted records used by decryption module to decrypt
*/
message EncryptedRecordForDelegateDecryption {
  string uuid = 1;
  string name = 2;
  string path = 3;
  repeated EncryptedDataParams params = 4;
  string encryption_key = 5;
  bytes encrypted_value = 6;
  string kms_id = 7;
  EncryptionType encryption_type = 8;
  bytes backup_encrypted_value = 9;
  string backup_encryption_key = 10;
  string backup_kms_id = 11;
  EncryptionType backup_encryption_type = 12;
  bool base64_encoded = 13;
  map<string, string> additional_metadata = 14;
}

message EncryptedDataParams {
  string name = 1;
  string value = 2;
}

enum EncryptionType {
  UNKNOWN = 0;
  NOT_SET = 1;
  LOCAL = 2;
  AWS_KMS = 3;
  GCP_KMS = 4;
  AWS_SECRETS_MANAGER = 5;
  AZURE_VAULT = 6;
  HASHICORP_VAULT = 7;
  GCP_SECRETS_MANAGER = 8;
  VAULT_SSH = 9;
  CUSTOM_NG = 10;
}

enum SecretManagerType {
  UNKNOWN_SM = 0;
  SM_NOT_SET = 1;
  KMS = 2;
  VAULT = 3;
  CUSTOM = 4;
  SSH = 5;
}

message EncryptionConfig {
  string uuid = 1;
  string account_id = 2;
  string name = 3;
  bool is_global_kms = 4;
  EncryptionType encryption_type = 5;
  SecretManagerType secret_manager_type = 6;
  string encryption_service_url = 7;

  oneof encryption_service_config {
    AzureVaultConfig azure_vault_config = 8;
    HashicorpVaultConfig vault_config = 9;
    GcpSecretsManagerConfig gcp_secret_manager_config = 10;
    AwsSecretsManagerConfig aws_secret_manager_config = 11;
    GcpKmsConfig gcp_kms_config = 12;
    AwsKmsConfig aws_kms_config = 13;
    CustomSecretNGManagerConfig custom_secret_manager_config = 14;
  }
}

/*
  Configurations for each type of vault config
*/
message AzureVaultConfig {
  string client_id = 1;
  string secret_key = 2;
  string tenant_id = 3;
  string vault_name = 4;
  string subscription = 5;
  bool use_managed_identity = 6;
  string managed_client_id = 7;
  AzureEnvironmentType azure_environment_type = 8;
  AzureManagedIdentityType azure_managed_identity_type = 9;

  enum AzureEnvironmentType {
    AZURE = 0;
    AZURE_US_GOVERNMENT = 1;
  }
  enum AzureManagedIdentityType {
    SYSTEM_ASSIGNED_MANAGED_IDENTITY = 0;
    USER_ASSIGNED_MANAGED_IDENTITY = 1;
  }
}

message HashicorpVaultConfig {
  string auth_token = 1;
  string secret_engine_name = 2;
  int32 secret_engine_version = 3;
  string namespace = 4;
  string base_path = 5;
  bool is_read_only = 6;
  string app_role_id = 7;
  string secret_id = 8;
  bool use_vault_agent = 9;
  string sink_path = 10;
  bool use_aws_iam = 11;
  string vault_aws_iam_role = 12;
  string aws_region = 13;
  string x_vault_aws_iam_server_id = 14;
  bool use_k8s_auth = 15;
  string vault_k8s_auth_role = 16;
  string service_account_token_path = 17;
  string k8s_auth_endpoint = 18;
}

message GcpSecretsManagerConfig {
  bytes gcp_service_account_credentials = 1;
  bool assume_credentials_on_delegate = 2;
}

message AwsSecretsManagerConfig {
  string access_key = 1;
  string secret_key = 2;
  string region = 3;
  string secret_name_prefix = 4;
  bool assume_iam_role_on_delegate = 5;
  bool assume_sts_role_on_delegate = 6;
  int32 assume_sts_role_duration = 7;
  string role_arn = 8;
  string external_name = 9;
}

/*
  Configurations for each type of kms config
*/
message GcpKmsConfig {
  string project_id = 1;
  string region = 2;
  string key_ring = 3;
  string key_name = 4;
  bytes gcp_service_account_credentials = 5;
}

message AwsKmsConfig {
  string access_key = 1;
  string secret_key = 2;
  string kms_arn = 3;
  string region = 4;
  bool assume_iam_role_on_delegate = 5;
  bool assume_sts_role_on_delegate = 6;
  int32 assume_sts_role_duration = 7;
  string role_arn = 8;
  string external_name = 9;
}

/*
  Configurations for custom ng secret manager
*/
message CustomSecretNGManagerConfig {
  string script = 1;
  bool is_on_delegate = 2;
  string working_directory = 3;
  string host = 4;
  string connector_ref = 5;
  SSHKey ssh_key = 6;
  TemplateLinkConfig template_link_config = 7;
  repeated SecretDetail ssh_encryption_details = 8;
}

message TemplateLinkConfig {
  string template_ref = 1;
  string version_label = 2;
  map<string, NameValuePairWithDefaultList> template_inputs = 3;
}

message NameValuePairWithDefaultList {
  repeated NameValuePairWithDefault values = 1;
}

message NameValuePairWithDefault {
  string name = 1;
  string value = 2;
  string type = 3;
  bool use_as_default = 4;
}

message SSHKey {
  enum SSHAuthScheme {
    SSH = 0;
    KERBEROS = 1;
  }
  int32 port = 1;
  SSHAuthScheme ssh_auth_scheme = 2;
  bool use_ssh_client = 3;
  bool use_ssh_j = 4;
  oneof ssh_auth_spec {
    SSHConfig ssh_config = 5;
    KerberosConfig kerberos_config = 6;
  }
}

/*
  ssh config
*/
message SSHConfig {
  enum SSHCredentialType {
    PASSWORD = 0;
    KEY_PATH = 1;
    KEY_REFERENCE = 2;
  }
  SSHCredentialType ssh_credential_type = 1;
  oneof credential_spec {
    SSHKeyPathCredential key_path_credential = 2;
    SSHKeyReferenceCredential key_reference_credential = 3;
    SSHPasswordCredential password_credential = 4;
  }
}

message SSHKeyPathCredential {
  string username = 1;
  string key_path = 2;
  string pass_phrase = 3;
}

message SSHKeyReferenceCredential {
  string username = 1;
  string key = 2;
  string pass_phrase = 3;
}

message SSHPasswordCredential {
  string username = 1;
  string password = 2;
}

/*
  Kerberos
*/
message KerberosConfig {
  string principal = 1;
  string realm = 2;
  TGTGenerationMethod tgt_generation_method = 3;
  oneof tgt_generation_Spec {
    TGTKeyTabFilePathSpec tgt_tab_file_path_spec = 4;
    TGTPasswordSpec tgt_password_spec = 5;
  }

  enum TGTGenerationMethod {
    KEY_TAB_FILE_PATH = 0;
    PASSWORD = 1;
  }
}

message TGTKeyTabFilePathSpec {
  string key_path = 1;
}

message TGTPasswordSpec {
  string password = 1;
}
