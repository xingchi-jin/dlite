// Copyright 2024 Harness Inc. All rights reserved.
// Use of this source code is governed by the PolyForm Free Trial 1.0.0 license
// that can be found in the licenses directory at the root of this repository, also available at
// https://polyformproject.org/wp-content/uploads/2020/05/PolyForm-Free-Trial-1.0.0.txt.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.2
// source: image_pull.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ImagePullSecret struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Connector:
	//
	//	*ImagePullSecret_Docker
	//	*ImagePullSecret_Aws
	//	*ImagePullSecret_Azure
	//	*ImagePullSecret_Gcp
	Connector isImagePullSecret_Connector `protobuf_oneof:"connector"`
}

func (x *ImagePullSecret) Reset() {
	*x = ImagePullSecret{}
	if protoimpl.UnsafeEnabled {
		mi := &file_image_pull_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImagePullSecret) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImagePullSecret) ProtoMessage() {}

func (x *ImagePullSecret) ProtoReflect() protoreflect.Message {
	mi := &file_image_pull_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImagePullSecret.ProtoReflect.Descriptor instead.
func (*ImagePullSecret) Descriptor() ([]byte, []int) {
	return file_image_pull_proto_rawDescGZIP(), []int{0}
}

func (m *ImagePullSecret) GetConnector() isImagePullSecret_Connector {
	if m != nil {
		return m.Connector
	}
	return nil
}

func (x *ImagePullSecret) GetDocker() *DockerConnector {
	if x, ok := x.GetConnector().(*ImagePullSecret_Docker); ok {
		return x.Docker
	}
	return nil
}

func (x *ImagePullSecret) GetAws() *AWSConnector {
	if x, ok := x.GetConnector().(*ImagePullSecret_Aws); ok {
		return x.Aws
	}
	return nil
}

func (x *ImagePullSecret) GetAzure() *AzureConnector {
	if x, ok := x.GetConnector().(*ImagePullSecret_Azure); ok {
		return x.Azure
	}
	return nil
}

func (x *ImagePullSecret) GetGcp() *GCPConnector {
	if x, ok := x.GetConnector().(*ImagePullSecret_Gcp); ok {
		return x.Gcp
	}
	return nil
}

type isImagePullSecret_Connector interface {
	isImagePullSecret_Connector()
}

type ImagePullSecret_Docker struct {
	Docker *DockerConnector `protobuf:"bytes,2,opt,name=docker,proto3,oneof"`
}

type ImagePullSecret_Aws struct {
	Aws *AWSConnector `protobuf:"bytes,3,opt,name=aws,proto3,oneof"`
}

type ImagePullSecret_Azure struct {
	Azure *AzureConnector `protobuf:"bytes,4,opt,name=azure,proto3,oneof"`
}

type ImagePullSecret_Gcp struct {
	Gcp *GCPConnector `protobuf:"bytes,5,opt,name=gcp,proto3,oneof"`
}

func (*ImagePullSecret_Docker) isImagePullSecret_Connector() {}

func (*ImagePullSecret_Aws) isImagePullSecret_Connector() {}

func (*ImagePullSecret_Azure) isImagePullSecret_Connector() {}

func (*ImagePullSecret_Gcp) isImagePullSecret_Connector() {}

var File_image_pull_proto protoreflect.FileDescriptor

var file_image_pull_proto_rawDesc = []byte{
	0x0a, 0x10, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x75, 0x6c, 0x6c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd1, 0x01, 0x0a, 0x0f,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12,
	0x30, 0x0a, 0x06, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x06, 0x64, 0x6f, 0x63, 0x6b, 0x65,
	0x72, 0x12, 0x27, 0x0a, 0x03, 0x61, 0x77, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x57, 0x53, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x03, 0x61, 0x77, 0x73, 0x12, 0x2d, 0x0a, 0x05, 0x61, 0x7a,
	0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x48, 0x00, 0x52, 0x05, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x12, 0x27, 0x0a, 0x03, 0x67, 0x63, 0x70,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x43, 0x50, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x03, 0x67,
	0x63, 0x70, 0x42, 0x0b, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x42,
	0x0e, 0x5a, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_image_pull_proto_rawDescOnce sync.Once
	file_image_pull_proto_rawDescData = file_image_pull_proto_rawDesc
)

func file_image_pull_proto_rawDescGZIP() []byte {
	file_image_pull_proto_rawDescOnce.Do(func() {
		file_image_pull_proto_rawDescData = protoimpl.X.CompressGZIP(file_image_pull_proto_rawDescData)
	})
	return file_image_pull_proto_rawDescData
}

var file_image_pull_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_image_pull_proto_goTypes = []interface{}{
	(*ImagePullSecret)(nil), // 0: proto.ImagePullSecret
	(*DockerConnector)(nil), // 1: proto.DockerConnector
	(*AWSConnector)(nil),    // 2: proto.AWSConnector
	(*AzureConnector)(nil),  // 3: proto.AzureConnector
	(*GCPConnector)(nil),    // 4: proto.GCPConnector
}
var file_image_pull_proto_depIdxs = []int32{
	1, // 0: proto.ImagePullSecret.docker:type_name -> proto.DockerConnector
	2, // 1: proto.ImagePullSecret.aws:type_name -> proto.AWSConnector
	3, // 2: proto.ImagePullSecret.azure:type_name -> proto.AzureConnector
	4, // 3: proto.ImagePullSecret.gcp:type_name -> proto.GCPConnector
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_image_pull_proto_init() }
func file_image_pull_proto_init() {
	if File_image_pull_proto != nil {
		return
	}
	file_connectors_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_image_pull_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImagePullSecret); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_image_pull_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*ImagePullSecret_Docker)(nil),
		(*ImagePullSecret_Aws)(nil),
		(*ImagePullSecret_Azure)(nil),
		(*ImagePullSecret_Gcp)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_image_pull_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_image_pull_proto_goTypes,
		DependencyIndexes: file_image_pull_proto_depIdxs,
		MessageInfos:      file_image_pull_proto_msgTypes,
	}.Build()
	File_image_pull_proto = out.File
	file_image_pull_proto_rawDesc = nil
	file_image_pull_proto_goTypes = nil
	file_image_pull_proto_depIdxs = nil
}
